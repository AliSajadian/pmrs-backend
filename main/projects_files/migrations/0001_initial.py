# Generated by Django 3.2.19 on 2023-11-29 06:36

import datetime
from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contracts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('projects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ReportVisit',
            fields=[
                ('reportvisitid', models.AutoField(db_column='ReportVisitID', primary_key=True, serialize=False)),
                ('financialinfo', models.BooleanField(db_column='FinancialInfo')),
                ('hse', models.BooleanField(db_column='HSE')),
                ('progressstate', models.BooleanField(db_column='ProgressState')),
                ('timeprogressstate', models.BooleanField(db_column='TimeProgressState')),
                ('invoice', models.BooleanField(db_column='Invoice')),
                ('financialinvoice', models.BooleanField(db_column='FinancialInvoice')),
                ('workvolume', models.BooleanField(db_column='WorkVolume')),
                ('pmsprogress', models.BooleanField(db_column='PMSProgress')),
                ('budget', models.BooleanField(db_column='Budget')),
                ('machinary', models.BooleanField(db_column='Machinary')),
                ('personel', models.BooleanField(db_column='Personel')),
                ('problems', models.BooleanField(db_column='Problems')),
                ('criticalactions', models.BooleanField(db_column='CriticalActions')),
                ('zoneimages', models.BooleanField(db_column='ZoneImages')),
                ('projectdox', models.BooleanField(db_column='ProjectDox')),
                ('durationdox', models.BooleanField(db_column='DurationDox')),
                ('dashboard_r', models.BooleanField(db_column='Dashboard_R')),
                ('dashboard_fc', models.BooleanField(db_column='Dashboard_FC')),
                ('imagereport', models.BooleanField(db_column='ImageReport')),
                ('contractid', models.ForeignKey(db_column='ContractID', on_delete=django.db.models.deletion.PROTECT, related_name='reportVisits', to='contracts.contract')),
                ('dateid', models.ForeignKey(db_column='DateID', on_delete=django.db.models.deletion.PROTECT, related_name='reportVisits', to='projects.reportdate')),
                ('userid', models.ForeignKey(db_column='UserID', on_delete=django.db.models.deletion.PROTECT, related_name='reportVisits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tblw_ReportVisit',
                'unique_together': {('userid', 'contractid', 'dateid')},
            },
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('zoneid', models.AutoField(db_column='ZoneID', primary_key=True, serialize=False)),
                ('zone', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Zone', max_length=50)),
                ('contractid', models.ForeignKey(db_column='ContractID', on_delete=django.db.models.deletion.PROTECT, related_name='Contract_Zone', to='contracts.contract')),
            ],
            options={
                'db_table': 'tblw_Zone',
            },
        ),
        migrations.CreateModel(
            name='ZoneImage',
            fields=[
                ('zoneimageid', models.AutoField(db_column='ZoneImageID', primary_key=True, serialize=False)),
                ('ppp', models.DecimalField(blank=True, db_column='PPP', decimal_places=2, max_digits=6, null=True)),
                ('app', models.DecimalField(blank=True, db_column='APP', decimal_places=2, max_digits=6, null=True)),
                ('pic1', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Pic1', max_length=250, null=True)),
                ('img1', models.ImageField(blank=True, db_column='Img1', null=True, unique=True, upload_to='zone_images')),
                ('description1', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Description1', max_length=250, null=True)),
                ('pic2', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Pic2', max_length=250, null=True)),
                ('img2', models.ImageField(blank=True, db_column='Img2', null=True, unique=True, upload_to='zone_images')),
                ('description2', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Description2', max_length=250, null=True)),
                ('pic3', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Pic3', max_length=250, null=True)),
                ('img3', models.ImageField(blank=True, db_column='Img3', null=True, unique=True, upload_to='zone_images')),
                ('description3', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Description3', max_length=250, null=True)),
                ('dateid', models.ForeignKey(db_column='DateID', on_delete=django.db.models.deletion.PROTECT, related_name='ReportDate', to='projects.reportdate')),
                ('zoneid', models.ForeignKey(db_column='ZoneID', on_delete=django.db.models.deletion.PROTECT, related_name='Zone_Zoneimage', to='projects_files.zone')),
            ],
            options={
                'db_table': 'tblw_ZoneImage',
            },
        ),
        migrations.CreateModel(
            name='ReportVisitdate',
            fields=[
                ('visitreportdateid', models.AutoField(db_column='VisitReportDateID', primary_key=True, serialize=False)),
                ('reportid', models.IntegerField(db_column='ReportID')),
                ('reportvisitdate', models.DateField(db_column='ReportVisitDate')),
                ('visitreportid', models.ForeignKey(db_column='VisitReportID', on_delete=django.db.models.deletion.PROTECT, related_name='ReportVisitdates', to='projects_files.reportvisit')),
            ],
            options={
                'db_table': 'tblw_ReportVisitDate',
            },
        ),
        migrations.CreateModel(
            name='ReportDox',
            fields=[
                ('reportdoxid', models.AutoField(db_column='ReportDoxID', primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, db_column='Date', null=True)),
                ('doctype', models.SmallIntegerField(db_column='DocType')),
                ('doctitle', models.SmallIntegerField(blank=True, db_column='DocTitle', null=True)),
                ('dockind', models.SmallIntegerField(blank=True, db_column='DocKind', null=True)),
                ('docno', models.IntegerField(blank=True, db_column='DocNo', null=True)),
                ('description', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Description', max_length=250)),
                ('file', models.FileField(db_column='File', null=True, storage=django.core.files.storage.FileSystemStorage(location='D:/projects/cost_control/files/projectsDox/hseDox'), upload_to='')),
                ('address', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Address', max_length=250)),
                ('active', models.BooleanField(blank=True, db_column='Active', null=True)),
                ('contractid', models.ForeignKey(db_column='ContractID', on_delete=django.db.models.deletion.PROTECT, related_name='Contract_ReportDox', to='contracts.contract')),
                ('dateid', models.ForeignKey(db_column='DateID', on_delete=django.db.models.deletion.PROTECT, related_name='ReportDate_ReportDox', to='projects.reportdate')),
            ],
            options={
                'db_table': 'tblw_ReportDox',
            },
        ),
        migrations.CreateModel(
            name='ProjectMonthlyDox',
            fields=[
                ('projectmonthlydoxid', models.AutoField(db_column='ProjectMonthlyDoxId', primary_key=True, serialize=False)),
                ('description', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Description', max_length=250)),
                ('file', models.FileField(db_column='File', null=True, storage=django.core.files.storage.FileSystemStorage(location='D:\\projects\\cost_control\\Pmrs_Files\\Project Monthly Reports'), unique=True, upload_to='')),
                ('active', models.BooleanField(blank=True, db_column='Active', null=True)),
                ('contractid', models.ForeignKey(db_column='ContractID', on_delete=django.db.models.deletion.PROTECT, related_name='Contract_ProjectMonthlyDox', to='contracts.contract')),
                ('dateid', models.ForeignKey(db_column='DateID', on_delete=django.db.models.deletion.PROTECT, related_name='ReportDate_ProjectMonthlyDox', to='projects.reportdate')),
            ],
            options={
                'db_table': 'tblw_ProjectMonthlyDox',
            },
        ),
        migrations.CreateModel(
            name='ProjectDox',
            fields=[
                ('projectdoxid', models.AutoField(db_column='ProjectDoxID', primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, db_column='Date', default=django.utils.timezone.now, null=True)),
                ('doctitle', models.PositiveSmallIntegerField(db_column='DocTitle', null=True)),
                ('dockind', models.PositiveSmallIntegerField(db_column='DocKind', null=True)),
                ('docno', models.PositiveSmallIntegerField(db_column='DocNo', null=True)),
                ('file', models.FileField(db_column='File', null=True, storage=django.core.files.storage.FileSystemStorage(location='D:\\projects\\cost_control\\Pmrs_Files\\Project Contract'), unique=True, upload_to='')),
                ('active', models.BooleanField(blank=True, db_column='Active', null=True)),
                ('contractid', models.ForeignKey(db_column='ContractID', on_delete=django.db.models.deletion.PROTECT, related_name='Contract_ProjectDox', to='contracts.contract')),
                ('dateid', models.ForeignKey(db_column='DateID', on_delete=django.db.models.deletion.PROTECT, related_name='ReportDate_ProjectDox', to='projects.reportdate')),
            ],
            options={
                'db_table': 'tblw_ProjectDox',
            },
        ),
        migrations.CreateModel(
            name='InvoiceDox',
            fields=[
                ('invoicedoxid', models.AutoField(db_column='InvoiceDoxID', primary_key=True, serialize=False)),
                ('invoicekind', models.SmallIntegerField(db_column='InvoiceKind')),
                ('invoiceno', models.IntegerField(db_column='InvoiceNo')),
                ('invoicedate', models.DateField(db_column='InvoiceDate')),
                ('senddate', models.DateField(blank=True, db_column='SendDate', null=True)),
                ('confirmdate', models.DateField(blank=True, db_column='ConfirmDate', null=True)),
                ('sgp_r', models.IntegerField(blank=True, db_column='SGP_R', null=True)),
                ('sgp_fc', models.BigIntegerField(blank=True, db_column='SGP_FC', null=True)),
                ('cgp_r', models.IntegerField(blank=True, db_column='CGP_R', null=True)),
                ('cgp_fc', models.BigIntegerField(blank=True, db_column='CGP_FC', null=True)),
                ('description', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Description', max_length=250, null=True)),
                ('address', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Address', max_length=250, null=True)),
                ('file', models.FileField(db_column='File', null=True, storage=django.core.files.storage.FileSystemStorage(location='D:\\projects\\cost_control\\Pmrs_Files\\Approved Invoices'), unique=True, upload_to='')),
                ('active', models.BooleanField(db_column='Active')),
                ('contractid', models.ForeignKey(db_column='ContractID', on_delete=django.db.models.deletion.PROTECT, related_name='Contract_Invoicedox', to='contracts.contract')),
                ('dateid', models.ForeignKey(db_column='DateID', on_delete=django.db.models.deletion.PROTECT, related_name='ReportDate_Invoicedox', to='projects.reportdate')),
            ],
            options={
                'db_table': 'tblw_InvoiceDox',
            },
        ),
        migrations.CreateModel(
            name='HseReportDox',
            fields=[
                ('hsereportdoxid', models.AutoField(db_column='HseReportDoxID', primary_key=True, serialize=False)),
                ('date', models.DateField(blank=True, db_column='Date', default=django.utils.timezone.now, null=True)),
                ('description', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Description', max_length=250)),
                ('file', models.FileField(db_column='File', null=True, storage=django.core.files.storage.FileSystemStorage(location='D:\\projects\\cost_control\\Pmrs_Files\\Hse_Reports'), unique=True, upload_to='')),
                ('active', models.BooleanField(blank=True, db_column='Active', null=True)),
                ('contractid', models.ForeignKey(db_column='ContractID', on_delete=django.db.models.deletion.PROTECT, related_name='Contract_HseReportDox', to='contracts.contract')),
                ('dateid', models.ForeignKey(db_column='DateID', on_delete=django.db.models.deletion.PROTECT, related_name='ReportDate_HseReportDox', to='projects.reportdate')),
            ],
            options={
                'db_table': 'tblw_HseReportDox',
            },
        ),
        migrations.CreateModel(
            name='ContractorDox',
            fields=[
                ('contractordoxid', models.AutoField(db_column='ContractorDoxId', primary_key=True, serialize=False)),
                ('contractdate', models.DateField(blank=True, db_column='ContractDate', default=datetime.date.today, null=True)),
                ('contracttitle', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='ContractTitle', max_length=250)),
                ('contractor', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Contractor', max_length=250)),
                ('contractno', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='ContractNo', max_length=50)),
                ('riderno', models.PositiveSmallIntegerField(db_column='RiderNo')),
                ('file', models.FileField(db_column='File', null=True, storage=django.core.files.storage.FileSystemStorage(location='D:\\projects\\cost_control\\Pmrs_Files\\Project Sub Contracts'), unique=True, upload_to='')),
                ('contractid', models.ForeignKey(db_column='ContractID', on_delete=django.db.models.deletion.PROTECT, related_name='Contract_ContractorDox', to='contracts.contract')),
            ],
            options={
                'db_table': 'tblw_ContractorDox',
            },
        ),
        migrations.CreateModel(
            name='ContractDox',
            fields=[
                ('contractdoxid', models.AutoField(db_column='ContractDoxID', primary_key=True, serialize=False)),
                ('contracttitle', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='ContractTitle', max_length=250)),
                ('contractor', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Contractor', max_length=250)),
                ('contractdate', models.DateField(blank=True, db_column='ContractDate', null=True)),
                ('contractno', models.CharField(blank=True, db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='ContractNo', max_length=50, null=True)),
                ('riderno', models.SmallIntegerField(blank=True, db_column='RiderNo', null=True)),
                ('fileaddress', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='FileAddress', max_length=250)),
                ('file', models.FileField(db_column='File', null=True, storage=django.core.files.storage.FileSystemStorage(location='D:\\projects\\cost_control\\Pmrs_Files\\Project Sub Contracts'), unique=True, upload_to='')),
                ('contractid', models.ForeignKey(db_column='ContractID', on_delete=django.db.models.deletion.PROTECT, related_name='Contract_ContractDox', to='contracts.contract')),
            ],
            options={
                'db_table': 'tblw_ContractDox',
            },
        ),
        migrations.CreateModel(
            name='ApprovedInvoiceDox',
            fields=[
                ('approvedinvoicedoxid', models.AutoField(db_column='ApprovedInvoiceDoxId', primary_key=True, serialize=False)),
                ('invoicekind', models.PositiveSmallIntegerField(db_column='InvoiceKind')),
                ('invoiceno', models.PositiveSmallIntegerField(db_column='InvoiceNo')),
                ('invoicedate', models.DateField(db_column='InvoiceDate')),
                ('senddate', models.DateField(db_column='SendDate', null=True)),
                ('confirmdate', models.DateField(db_column='ConfirmDate', null=True)),
                ('sgp_r', models.IntegerField(db_column='SGP_R', null=True)),
                ('sgp_fc', models.BigIntegerField(db_column='SGP_FC', null=True)),
                ('cgp_r', models.IntegerField(db_column='CGP_R', null=True)),
                ('cgp_fc', models.BigIntegerField(db_column='CGP_FC', null=True)),
                ('description', models.CharField(db_collation='SQL_Latin1_General_CP1_CI_AS', db_column='Description', max_length=250, null=True)),
                ('file', models.FileField(db_column='File', null=True, storage=django.core.files.storage.FileSystemStorage(location='D:\\projects\\cost_control\\Pmrs_Files\\Approved Invoices'), unique=True, upload_to='')),
                ('active', models.BooleanField(blank=True, db_column='Active', null=True)),
                ('contractid', models.ForeignKey(db_column='ContractID', on_delete=django.db.models.deletion.PROTECT, related_name='Contract_ApprovedInvoiceDox', to='contracts.contract')),
                ('dateid', models.ForeignKey(db_column='DateID', on_delete=django.db.models.deletion.PROTECT, related_name='ReportDate_ApprovedInvoiceDox', to='projects.reportdate')),
            ],
            options={
                'db_table': 'tblw_ApprovedInvoiceDox',
            },
        ),
    ]
